# Copyright David Abrahams, Daniel Wallin 2006.
# Copyright Cromwell D. Enage 2017.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

# Boost Parameter Library test Jamfile

import testing ;

project boost/parameter
    :
        default-build
        <warnings>off
    ;

import python ;

alias parameter_standard_tests
    :
    [ run maybe.cpp : : : : : <preserve-target-tests>off ]
    [ run singular.cpp : : : : : <preserve-target-tests>off ]
    [ run tutorial.cpp : : : : : <preserve-target-tests>off ]
    [ run compose.cpp : : : : : <preserve-target-tests>off ]
    [ run sfinae.cpp : : : : : <preserve-target-tests>off ]
    [ run optional_deduced_sfinae.cpp : : : : : <preserve-target-tests>off ]
    [ run efficiency.cpp
        :
        :
        :
        :
        :
            <variant>release
            <preserve-target-tests>off
    ]
    [ run evaluate_category.cpp : : : : : <preserve-target-tests>off ]
    [ run evaluate_category_16.cpp : : : : : <preserve-target-tests>off ]
    [ run preprocessor_eval_category.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run normalized_argument_types.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run basics.cpp : : : : : <preserve-target-tests>off ]
    [ run mpl.cpp : : : : : <preserve-target-tests>off ]
    [ run earwicker.cpp : : : : : <preserve-target-tests>off ]
    [ run macros.cpp : : : : : <preserve-target-tests>off ]
    [ run preprocessor.cpp : : : : : <preserve-target-tests>off ]
    [ run preprocessor_deduced.cpp : : : : : <preserve-target-tests>off ]
    [ run deduced.cpp : : : : : <preserve-target-tests>off ]
    [ run deduced_dependent_predicate.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ compile unwrap_cv_reference.cpp ]
    [ compile ntp.cpp ]
    [ compile function_type_tpl_param.cpp ]
    [ compile-fail duplicates.cpp : : duplicates_fail ]
    [ compile-fail deduced_unmatched_arg.cpp : : deduced_unmatched_arg_fail ]
    [ compile-fail basics.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE
        :
            basics_fail
    ]
    [ compile-fail compose.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE_0
        :
            compose_fail_0
    ]
    [ compile-fail compose.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE_1
        :
            compose_fail_1
    ]
    [ compile-fail evaluate_category.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE
        :
            evaluate_category_fail
    ]
    [ compile-fail deduced.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE
        :
            deduced_fail
    ]
    ;

alias parameter_literate_tests
    :
    [ run literate/extracting-parameter-types0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/extracting-parameter-types1.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/top-level0.cpp : : : : : <preserve-target-tests>off ]
    [ run literate/predicate-requirements0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/building-argumentpacks0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/lazy-default-computation0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/lazy-default-computation1.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/namespaces0.cpp : : : : : <preserve-target-tests>off ]
    [ run literate/namespaces1.cpp : : : : : <preserve-target-tests>off ]
    [ run literate/namespaces2.cpp : : : : : <preserve-target-tests>off ]
    [ run literate/namespaces3.cpp : : : : : <preserve-target-tests>off ]
    [ run literate/parameter-enabled-constructors0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/deduced-template-parameters0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/deduced-parameters0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/default-expression-evaluation0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ run literate/fine-grained-name-control0.cpp
        :
        :
        :
        :
        :
            <preserve-target-tests>off
    ]
    [ compile literate/template-keywords0.cpp ]
    [ compile literate/template-keywords1.cpp ]
    [ compile literate/headers-and-namespaces0.cpp ]
    [ compile literate/handling-out-parameters0.cpp ]
    [ compile literate/writing-the-function0.cpp ]
    [ compile literate/defining-the-keywords0.cpp ]
    [ compile literate/defining-the-keywords1.cpp ]
    [ compile literate/exercising-the-code-so-far0.cpp ]
    [ compile literate/optional-parameters0.cpp ]
    [ compile literate/static-member-functions0.cpp ]
    [ compile literate/required-parameters0.cpp ]
    [ compile literate/class-template-skeleton0.cpp ]
    [ compile literate/parameter-enabled-member-functions0.cpp ]
    [ compile literate/parameter-enabled-member-functions1.cpp ]
    ;

alias parameter_python_test
    :
    [ bpl-test python_test ]
    ;

alias parameter_macros_eval_category
    :
    [ run macros_eval_category.cpp : : : : : <preserve-target-tests>off ]
    ;

alias parameter_evaluate_category_10
    :
    [ run evaluate_category_10.cpp : : : : : <preserve-target-tests>off ]
    ;

alias parameter_preprocessor_eval_cat_8
    :
    [ run preprocessor_eval_cat_8.cpp : : : : : <preserve-target-tests>off ]
    ;

alias parameter_preprocessor_eval_cat_fail
    :
    [ compile-fail preprocessor_eval_category.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE
        :
            preproc_eval_cat_fail
    ]
    ;

alias parameter_0011_stress_tests
    :
        parameter_preprocessor_eval_cat_8
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_0101_stress_tests
    :
        parameter_evaluate_category_10
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_0110_stress_tests
    :
        parameter_evaluate_category_10
        parameter_preprocessor_eval_cat_8
    ;

alias parameter_0111_stress_tests
    :
        parameter_0110_stress_tests
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_1001_stress_tests
    :
        parameter_macros_eval_category
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_1010_stress_tests
    :
        parameter_macros_eval_category
        parameter_preprocessor_eval_cat_8
    ;

alias parameter_1011_stress_tests
    :
        parameter_1010_stress_tests
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_1100_stress_tests
    :
        parameter_macros_eval_category
        parameter_evaluate_category_10
    ;

alias parameter_1101_stress_tests
    :
        parameter_1100_stress_tests
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_1110_stress_tests
    :
        parameter_1100_stress_tests
        parameter_preprocessor_eval_cat_8
    ;

alias parameter_all_stress_tests
    :
        parameter_1110_stress_tests
        parameter_preprocessor_eval_cat_fail
    ;

alias parameter_sl_tests
    :
        parameter_standard_tests
        parameter_literate_tests
    ;

alias parameter_sp_tests
    :
        parameter_standard_tests
        parameter_python_test
    ;

alias parameter_slp_tests
    :
        parameter_sl_tests
        parameter_python_test
    ;

alias parameter_all_but_preproc_eval_cat_fail_tests
    :
        parameter_1110_stress_tests
        parameter_slp_tests
    ;

alias parameter_all_but_python_tests
    :
        parameter_all_stress_tests
        parameter_sl_tests
    ;

alias parameter_all_tests
    :
        parameter_all_stress_tests
        parameter_slp_tests
    ;

alias parameter_msvc11_fail_tests
    :
    [ compile-fail compose.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE_MSVC
        :
            compose_msvc11_fail
    ]
    ;

alias parameter_msvc11_tests
    :
        parameter_all_tests
        parameter_msvc11_fail_tests
    ;

alias parameter_msvc14_fail_tests
    :
    [ compile-fail evaluate_category.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE_MSVC14_1
        :
            evaluate_category_msvc14_fail
    ]
    [ compile-fail preprocessor_eval_category.cpp
        :
            <define>LIBS_PARAMETER_TEST_COMPILE_FAILURE_MSVC14_1
        :
            preproc_eval_cat_msvc14_fail
    ]
    ;

alias parameter_msvc14_no_python_tests
    :
        parameter_all_but_python_tests
        parameter_msvc14_fail_tests
    ;

alias parameter_msvc14_tests
    :
        parameter_all_tests
        parameter_msvc14_fail_tests
    ;

